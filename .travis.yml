language: rust
sudo: false

cache:
  # Cache ONLY .cargo, not target/ like usual
  directories:
  - $HOME/.cargo

rust:
  - nightly

before_script:
  - rustup component add rust-src
  - rustup component add clippy --toolchain=nightly
  - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
  - (test -x $HOME/.cargo/bin/cargo-xbuild || cargo install cargo-xbuild)
  - (test -x $HOME/.cargo/bin/cargo-make || cargo install cargo-make)
  - (test -x $HOME/.cargo/bin/mdbook || cargo install mdbook)
  - cargo install-update -a

script:
  # Obtain the devkitPro tools, using `target/` as a temp directory
  - mkdir -p target
  - cd target
  - wget https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb
  - sudo dpkg -i devkitpro-pacman.deb
  - sudo dkp-pacman -Sy
  - sudo dkp-pacman -Syu
  - sudo dkp-pacman -S -v --noconfirm gba-tools devkitARM
  - export PATH="$PATH:/opt/devkitpro/devkitARM/bin"
  - export PATH="$PATH:/opt/devkitpro/tools/bin"
  - cd ..
  # Run all verificaions, both debug and release
  #- cargo clippy
  #- cargo clippy --release
  - cargo test --no-fail-fast --lib
  - cargo test --no-fail-fast --lib --release
  - cargo test --no-fail-fast --tests
  - cargo test --no-fail-fast --tests --release
  # Let cargo make take over the rest
  - cargo make justrelease
  # Test build the book so that a failed book build kills this run
  - cd book && mdbook build

deploy:
  provider: pages
  local-dir: target/book-output
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: false
  name: DocsBot
  verbose: true
  on:
    branch: master
